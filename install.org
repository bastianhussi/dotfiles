* Emacs
  This will compile Emacs from source using the native-compilation feature in combination with
  pgtk-support. This way all Emacs Lisp-files will be compiled to native binaries. Pgtk allows to
  use Emacs without xwayland by adding native wayland support. Also adds better support for hi-res
  displays.
  #+begin_src shell
  git clone --depth 1 https://github.com/flatwhatson/emacs
  cd emacs
  ./autogen.sh
  ./configure \
      --with-native-compilation \
      --with-pgtk \
      --with-mailutils \
      --without-pop \
      --with-gnutls \
      --with-json \
      --with-cairo \
      --with-harfbuzz \
      CFLAGS="-O2 -march=znver2 -pipe" \
      CPPFLAGS="${CFLAGS}"
  make NATIVE_FULL_AOT=1 -j$(nproc) # takes 12-15mins (AMD Ryzen 5 3600)
  sudo make install
  #+end_src
* Mu4e
  #+begin_src shell
  git clone https://github.com/djcb/mu.git
  cd mu
  ./autogen.sh
  ./configure
  make
  sudo make install
  #+end_src
* Isync
  #+begin_src shell
  # Install isync (aka mbsync)
  sudo apt install isync

  # Sync all accounts
  mbsync -a

  # In case of missing certs:
  openssl s_client -connect imap.$DOMAIN:143 -showcerts 2>&1 < /dev/null \
    | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' \
    | sed -ne '1,/-END CERTIFICATE-/p' > ~/.ssl/certs/imap.$DOMAIN.pem

  # same thing for smtp:
  openssl s_client -connect smtp.$DOMAIN:465 2>/dev/null </dev/null \
    |  sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' \
    |  sed -ne '1,/-END CERTIFICATE-/p' > ~/.config/ssl/certs/smtp.$DOMAIN.pem

  mu init --maildir=$MAILDIR --my-address=john.doe@gmail.com --my-address=max.mustermann@gmail.com
  mu index
  #+end_src
* Dev
** Tools
   #+begin_src shell
   # Change the watch limit
   echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

   # Set a prefix for user packages
   npm config set prefix ${XDG_DATA_HOME:-$HOME/.local/share}/npm

   # Install langservers and other development-tools
   npm i --save -g typescript typescript-language-server \
       @vue/cli vls \
       dockerfile-language-server-nodejs \
       bash-language-server \
       yaml-language-server \
       vscode-css-languageservice \
       vscode-json-languageservice \
       sql-language-server \
       prettier eslint
   #+end_src
